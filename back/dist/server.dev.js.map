{"version":3,"sources":["server.js"],"names":["express","require","cors","mysql","app","use","json","db","createConnection","host","user","password","database","connect","err","console","error","log","get","req","res","sql","query","data","status","post","values","body","name","email","put","params","id","listen"],"mappings":"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","sourcesContent":["const express = require('express') \r\nconst cors = require('cors')\r\nconst mysql = require('mysql')\r\nconst app = express()\r\n\r\napp.use(express.json())\r\napp.use(cors())\r\n\r\n const db = mysql.createConnection({\r\n    host : \"localhost\" ,\r\n    user : \"root\" ,\r\n    password : \"\" ,\r\n    database : \"second\"\r\n})\r\n\r\ndb.connect((err) => {\r\n    if (err) {\r\n        console.error('Error connecting to database:', err);\r\n        return;\r\n    }\r\n    console.log('Connected to MySQL database');\r\n});\r\n\r\napp.get(\"/\", (req, res) => {\r\n    const sql = \"SELECT * FROM student\";\r\n    db.query(sql, (err, data) => {\r\n        if (err) {\r\n            console.error('Error executing query:', err);\r\n            return res.status(500).json({ error: \"An error occurred\" });\r\n        }\r\n        return res.json(data);\r\n    });\r\n});\r\n\r\n\r\napp.post('/create' , (req , res) => {\r\n    const sql = \"INSERT INTO student (`Name` , `Email`) VALUES (?)\"\r\n    const values = \r\n      [  req.body.name, \r\n        req.body.email]\r\n    \r\n        db.query(sql , [values] , (err , data) => {\r\n            if(err) return res.json(\"Error\");\r\n            return res.json(data)\r\n        } )\r\n} )\r\n\r\n\r\n\r\napp.put('/update/:id', (req, res) => {\r\n    const sql = \"UPDATE student SET `Name` = ?, `Email` = ? WHERE ID = ?\";\r\n    const values = [\r\n        req.body.name, \r\n        req.body.email,\r\n        req.params.id // Add the id parameter here\r\n    ];\r\n\r\n    db.query(sql, values, (err, data) => {\r\n        if(err) return res.json(\"Error\");\r\n        return res.json(data);\r\n    });\r\n});\r\n\r\napp.delete('/student/:id', (req, res) => {\r\n    const sql = \"DELETE FROM student WHERE ID = ? \";\r\n   const id = req.params.id\r\n    db.query(sql, [id], (err, data) => {\r\n        if(err) return res.json(\"Error\");\r\n        return res.json(data);\r\n    });\r\n});\r\n\r\n\r\napp.listen(8081 , () =>{\r\n    console.log('server runing on port 8081')\r\n})"],"file":"server.dev.js"}